<template1C xmlns="http://axelot.ru/esb/cc/2015/01" name="ESW-1.УФ.Поступления.In" type="Входящая" version="0">
  <ingoingSettings messageClassId="55" messageClassName="ESW-1.УФ.Поступления"/>
  <code>//Определение переменных&#13;
ПустойИдентификатор = "00000000-0000-0000-0000-000000000000";&#13;
ЗадержкаБлокировки = $ЗадержкаБлокировки;&#13;
ЗадержкаЗапросаДанных = $ЗадержкаЗапросаДанных;&#13;
&#13;
//Получение тела сообщения&#13;
xdtoОбъект = сшпОбщегоНазначения.ПолучитьОбъектXDTO(ФорматСообщения, ОбъектСообщение.Body);&#13;
&#13;
НачатьТранзакцию();&#13;
Попытка&#13;
	&#13;
	ЗначениеДляПоиска = Новый УникальныйИдентификатор(xdtoОбъект.Ссылка);&#13;
	СсылкаНаЭлемент = Документы.ПриходТовара.ПолучитьСсылку(ЗначениеДляПоиска);&#13;
	&#13;
	Блокировка = Новый БлокировкаДанных;&#13;
	ЭлементБлокировки = Блокировка.Добавить("Документ.ПриходТовара");&#13;
	ЭлементБлокировки.УстановитьЗначение("Ссылка", СсылкаНаЭлемент);&#13;
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;&#13;
	Попытка&#13;
		Блокировка.Заблокировать();&#13;
	Исключение&#13;
		ОтменитьТранзакцию();&#13;
		СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки;&#13;
		Задержка = ЗадержкаБлокировки;&#13;
		ЗаписьЖурналаРегистрации(&#13;
		"Datareon. Обработка сообщения", УровеньЖурналаРегистрации.Предупреждение,, &#13;
		Идентификатор, "Ожидание установки блокировки на ключ " + xdtoОбъект.Ссылка&#13;
		);&#13;
		Перейти ~Выход;&#13;
	КонецПопытки;	&#13;
	&#13;
	//Поиск объекта&#13;
	&#13;
	новыйОбъект = СсылкаНаЭлемент.ПолучитьОбъект();&#13;
	Если новыйОбъект = Неопределено тогда&#13;
		новыйОбъект = Документы.ПриходТовара.СоздатьДокумент();&#13;
		новыйОбъект.УстановитьСсылкуНового(СсылкаНаЭлемент);&#13;
	КонецЕсли;&#13;
	&#13;
	//Запрос данных - создаём список&#13;
	НенайденныеОбъектыМассив = Новый Массив;&#13;
	&#13;
	////////////////////////////////////////////////////////////////////////////////&#13;
	//Реквизиты шапки&#13;
	&#13;
	//Дата&#13;
	новыйОбъект.Дата = ?(ЗначениеЗаполнено(xdtoОбъект.Получить("Дата")), XMLЗначение(Тип("Дата"), xdtoОбъект.Получить("Дата")), Дата(1,1,1));&#13;
	&#13;
	//Поставщик&#13;
	Значение = xdtoОбъект.Получить("Поставщик");&#13;
	Если Значение &lt;&gt; ПустойИдентификатор И ЗначениеЗаполнено(Значение) Тогда&#13;
		новыйОбъект.Поставщик = Справочники.Контрагенты.ПолучитьСсылку(новый УникальныйИдентификатор(Значение));&#13;
		//Запрос данных - заполняем список&#13;
		Если новыйОбъект.Поставщик.ПолучитьОбъект() = Неопределено  Тогда&#13;
			стрНенайденныеОбъекты = Новый Структура;&#13;
			стрНенайденныеОбъекты.Вставить("ТипДанных", "Контрагент");&#13;
			стрНенайденныеОбъекты.Вставить("ЗначениеПоля", Значение);&#13;
			НенайденныеОбъектыМассив.Добавить(стрНенайденныеОбъекты);&#13;
		КонецЕсли;&#13;
	Иначе&#13;
		новыйОбъект.Поставщик = Справочники.Контрагенты.ПустаяСсылка();&#13;
	КонецЕсли;&#13;
	&#13;
	//Склад&#13;
	Значение = xdtoОбъект.Получить("Склад");&#13;
	Если Значение &lt;&gt; ПустойИдентификатор И ЗначениеЗаполнено(Значение) Тогда&#13;
		новыйОбъект.Склад = Справочники.Склады.ПолучитьСсылку(новый УникальныйИдентификатор(Значение));&#13;
		//Запрос данных - заполняем список&#13;
		Если новыйОбъект.Склад.ПолучитьОбъект() = Неопределено  Тогда&#13;
			стрНенайденныеОбъекты = Новый Структура;&#13;
			стрНенайденныеОбъекты.Вставить("ТипДанных", "Склад");&#13;
			стрНенайденныеОбъекты.Вставить("ЗначениеПоля", Значение);&#13;
			НенайденныеОбъектыМассив.Добавить(стрНенайденныеОбъекты);&#13;
		КонецЕсли;&#13;
	Иначе&#13;
		новыйОбъект.Склад = Справочники.Склады.ПустаяСсылка();&#13;
	КонецЕсли;&#13;
	&#13;
	//Организация&#13;
	Значение = xdtoОбъект.Получить("Организация");&#13;
	Если Значение &lt;&gt; ПустойИдентификатор И ЗначениеЗаполнено(Значение) Тогда&#13;
		новыйОбъект.Организация = Справочники.Организации.ПолучитьСсылку(новый УникальныйИдентификатор(Значение));&#13;
		//Запрос данных - заполняем список&#13;
		Если новыйОбъект.Организация.ПолучитьОбъект() = Неопределено  Тогда&#13;
			стрНенайденныеОбъекты = Новый Структура;&#13;
			стрНенайденныеОбъекты.Вставить("ТипДанных", "Организация");&#13;
			стрНенайденныеОбъекты.Вставить("ЗначениеПоля", Значение);&#13;
			НенайденныеОбъектыМассив.Добавить(стрНенайденныеОбъекты);&#13;
		КонецЕсли;&#13;
	Иначе&#13;
		новыйОбъект.Организация = Справочники.Организации.ПустаяСсылка();&#13;
	КонецЕсли;&#13;
	&#13;
	//Валюта&#13;
	Значение = xdtoОбъект.Получить("Валюта");&#13;
	Если Значение &lt;&gt; ПустойИдентификатор И ЗначениеЗаполнено(Значение) Тогда&#13;
		новыйОбъект.Валюта = Справочники.Валюты.ПолучитьСсылку(новый УникальныйИдентификатор(Значение));&#13;
		//Запрос данных - заполняем список&#13;
		Если новыйОбъект.Валюта.ПолучитьОбъект() = Неопределено  Тогда&#13;
			стрНенайденныеОбъекты = Новый Структура;&#13;
			стрНенайденныеОбъекты.Вставить("ТипДанных", "Валюта");&#13;
			стрНенайденныеОбъекты.Вставить("ЗначениеПоля", Значение);&#13;
			НенайденныеОбъектыМассив.Добавить(стрНенайденныеОбъекты);&#13;
		КонецЕсли;&#13;
	Иначе&#13;
		новыйОбъект.Валюта = Справочники.Валюты.ПустаяСсылка();&#13;
	КонецЕсли;&#13;
	&#13;
	////////////////////////////////////////////////////////////////////////////////&#13;
	//Табличные части&#13;
	&#13;
	&#13;
	//Табличная часть Товары&#13;
	новыйОбъект.Товары.Очистить();&#13;
	текТаблица = xdtoОбъект.Товары.Последовательность();&#13;
	Для Инд = 0 По текТаблица.Количество()-1 Цикл&#13;
		xdtoСтрока= текТаблица.ПолучитьЗначение(Инд);&#13;
		текСтрока = новыйОбъект.Товары.Добавить();&#13;
		&#13;
		//Товар&#13;
		Значение = xdtoСтрока.Получить("Товар");&#13;
		Если Значение &lt;&gt; ПустойИдентификатор И ЗначениеЗаполнено(Значение) Тогда&#13;
			текСтрока.Товар = Справочники.Товары.ПолучитьСсылку(новый УникальныйИдентификатор(Значение));&#13;
			//Запрос данных - заполняем список&#13;
			Если текСтрока.Товар.ПолучитьОбъект() = Неопределено  Тогда&#13;
				стрНенайденныеОбъекты = Новый Структура;&#13;
				стрНенайденныеОбъекты.Вставить("ТипДанных", "Товар");&#13;
				стрНенайденныеОбъекты.Вставить("ЗначениеПоля", Значение);&#13;
				НенайденныеОбъектыМассив.Добавить(стрНенайденныеОбъекты);&#13;
			КонецЕсли;&#13;
		Иначе&#13;
			текСтрока.Товар = Справочники.Товары.ПустаяСсылка();&#13;
		КонецЕсли;&#13;
		&#13;
		//Цена&#13;
		текСтрока.Цена = xdtoСтрока.Получить("Цена");&#13;
		&#13;
		//Количество&#13;
		текСтрока.Количество = xdtoСтрока.Получить("Количество");&#13;
		&#13;
		//Сумма&#13;
		текСтрока.Сумма = xdtoСтрока.Получить("Сумма");&#13;
	КонецЦикла;&#13;
	&#13;
	//Запрос данных - обработка&#13;
	Если НенайденныеОбъектыМассив.Количество()&gt;0 Тогда&#13;
		&#13;
		СостояниеСообщения = Перечисления.сшпСтатусыСообщений.ОжиданиеОбработки;&#13;
		Задержка = ЗадержкаЗапросаДанных;&#13;
		&#13;
		Данные = Новый Структура;&#13;
		Данные.Вставить("ПоляЗапросаДанных", НенайденныеОбъектыМассив);&#13;
		&#13;
		ТипОбъекта = "ЗапросДанных";&#13;
		ЗначениеХранения = сшпОбщегоНазначения.ПреобразоватьСтруктуруПоФормату(ФорматСообщения, Данные);&#13;
		ФорматСериализация = Перечисления.сшпФорматыСообщений.XML;&#13;
		МетодХранения = Перечисления.сшпМетодХранения.ПоСсылке;&#13;
		&#13;
		сшпРаботаСДанными.ПоместитьВОчередьИсходящих(ТипОбъекта, ЗначениеХранения, ФорматСериализация, МетодХранения);&#13;
		&#13;
		ЗаписьЖурналаРегистрации(&#13;
		"Datareon. ЗапросДанных", УровеньЖурналаРегистрации.Предупреждение,, &#13;
		Идентификатор, "Текст запроса данных в обработчике (ESW-1.УФ.Поступления.In) " + ЗначениеХранения&#13;
		);&#13;
		&#13;
	КонецЕсли;	&#13;
	&#13;
	&#13;
	//Запись объекта&#13;
	новыйОбъект.ДополнительныеСвойства.Вставить("СШПНеобрабатывать", Истина);&#13;
	новыйОбъект.ОбменДанными.Загрузка = Истина;&#13;
	новыйОбъект.Записать();&#13;
	&#13;
	ЗафиксироватьТранзакцию();	&#13;
Исключение&#13;
	Пока ТранзакцияАктивна() Цикл&#13;
		ОтменитьТранзакцию();&#13;
	КонецЦикла;&#13;
	ВызватьИсключение;&#13;
КонецПопытки;&#13;
</code>
  <comment>Автоматически сгенерировано</comment>
  <variables>
    <variable comment="" default="300" name="ЗадержкаЗапросаДанных" type="Число"/>
    <variable comment="" default="10" name="ЗадержкаБлокировки" type="Число"/>
  </variables>
</template1C>
